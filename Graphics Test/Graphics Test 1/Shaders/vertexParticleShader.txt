#version 400
// Initial velocity and start time
subroutine void RenderPassType();
subroutine uniform RenderPassType RenderPass;
layout (location = 0) in vec3 VertexInitVel;
layout (location = 1) in float VertexStartTime;
out float StartTime; //Feedback for startTime
out float Transp; // Transparency of the particle
uniform float Time; // Animation time
uniform vec3 Gravity; // world coords
uniform float ParticleLifetime; // Max particle lifetime
uniform mat4 MVP;

subroutine (RenderPassType) 
void update()
{
	StartTime = VertexStartTime;

	float age = Time - VertexStartTime;	
	if(age>ParticleLifetime)
	{
		StartTime = Time;
	}
}

subroutine (RenderPassType)
void render()
{
	// Assume the initial position is (0,0,0).
	vec3 pos = vec3(0.0);
	Transp = 0.0;
	// Particle doesn't exist until the start time
	if( Time >VertexStartTime ) 
	{
		float t = Time - VertexStartTime;
		if( t <ParticleLifetime ) 
		{
			pos = VertexInitVel * t + Gravity * t * t;
			Transp = 1.0 - t / ParticleLifetime;
		}
		
	}
	if(pos.y < -0.3f)
	{
		pos.y = 0.3f;
	}
	gl_Position = MVP * vec4(pos, 1.0);
}

void main()
{
	RenderPass();
}